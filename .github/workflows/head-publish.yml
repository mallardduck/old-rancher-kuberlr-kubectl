name : Branch Head Prerelease Images

on:
  push:
    branches:
      - main
      - release/v[0-9]+.0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write # Upload artefacts to release.

env:
  PUBLIC_REGISTRY: docker.io

jobs:
  prebuild-env:
    name: Prebuild needed Env vars
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - name: Set Branch Tag and Other Variables
        id: set-vars
        run: ./.github/scripts/branch-tags.sh
    outputs:
      branch_tag: ${{ steps.set-vars.outputs.branch_tag }}
      branch_static_tag: ${{ steps.set-vars.outputs.branch_static_tag }}
      prev_tag: ${{ steps.set-vars.outputs.prev_tag }}

  publish-public:
    runs-on: ubuntu-latest
    needs:
      - prebuild-env
    steps:
      - name: Check out repository code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Build and push all image variations
        uses: rancher/ecm-distro-tools/actions/publish-image@master
        with:
          image: rancher-kuberlr-kubectl
          make-target: 'image-push'
          tag: ${{ needs.prebuild-env.outputs.branch_static_tag }}
          platforms: "linux/amd64,linux/arm64,linux/s390x"

          public-registry: ${{ env.PUBLIC_REGISTRY }}
          public-repo: ${{ vars.REPO || github.repository_owner }}
          public-username: ${{ vars.DOCKER_USERNAME }}
          public-password: ${{ secrets.DOCKER_PASSWORD }}

          push-to-prime: false

      - name: Re-tag the static head image using the rolling tag
        env:
          FULL_IMAGE_URL: ${{ env.PUBLIC_REGISTRY }}/${{ vars.REPO || github.repository_owner }}/rancher-kuberlr-kubectl
        run: |
          MANIFEST_ARCHS=$(docker manifest inspect ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_static_tag }} | \
                  jq -r '[.manifests[] |select(.platform.architecture != "unknown" and .platform.os != "unknown") | "\(.platform.os)/\(.platform.architecture)"] | join(",")'
          )
          docker pull --platform=$MANIFEST_ARCHS ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_static_tag }}
          docker buildx imagetools create -t ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_static_tag }} ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_tag }}
          docker push ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_tag }}
